CALL:	curStackLen=0	numArgs=2		[[27], [[4], [[4], 57, [3]], [3]], [[4], [[4], 83, [[4], 72, [[4], 69, [[4], 76, [[4], 76, [[4], 61, [[4], 47, [[4], 98, [[4], 105, [[4], 110, [[4], 47, [[4], 98, [[4], 97, [[4], 115, [[4], 104, [3]]]]]]]]]]]]]]]], [[4], [[4], 67, [[4], 79, [[4], 76, [[4], 79, [[4], 82, [[4], 84, [[4], 69, [[4], 82, [[4], 77, [[4], 61, [[4], 116, [[4], 114, [[4], 117, [[4], 101, [[4], 99, [[4], 111, [[4], 108, [[4], 111, [[4], 114, [3]]]]]]]]]]]]]]]]]]]], [[4], [[4], 73, [[4], 51, [[4], 83, [[4], 79, [[4], 67, [[4], 75, [[4], 61, [[4], 47, [[4], 116, [[4], 109, [[4], 112, [[4], 47, [[4], 105, [[4], 51, [[4], 45, [[4], 95, [[4], 46, [[4], 103, [[4], 99, [[4], 83, [[4], 73, [[4], 107, [[4], 122, [[4], 47, [[4], 105, [[4], 112, [[4], 99, [[4], 45, [[4], 115, [[4], 111, [[4], 99, [[4], 107, [[4], 101, [[4], 116, [[4], 46, [[4], 49, [[4], 53, [[4], 55, [[4], 57, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[4], [[4], 74, [[4], 65, [[4], 86, [[4], 65, [[4], 95, [[4], 72, [[4], 79, [[4], 77, [[4], 69, [[4], 61, [[4], 47, [[4], 117, [[4], 115, [[4], 114, [[4], 47, [[4], 108, [[4], 105, [[4], 98, [[4], 47, [[4], 106, [[4], 118, [[4], 109, [[4], 47, [[4], 111, [[4], 112, [[4], 101, [[4], 110, [[4], 106, [[4], 100, [[4], 107, [[4], 45, [[4], 49, [[4], 46, [[4], 56, [[4], 46, [[4], 48, [[4], 95, [[4], 50, [[4], 48, [[4], 50, [[4], 47, [[4], 106, [[4], 114, [[4], 101, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[4], [[4], 68, [[4], 79, [[4], 84, [[4], 78, [[4], 69, [[4], 84, [[4], 95, [[4], 82, [[4], 79, [[4], 79, [[4], 84, [[4], 61, [[4], 47, [[4], 104, [[4], 111, [[4], 109, [[4], 101, [[4], 47, [[4], 95, [[4], 47, [[4], 97, [[4], 47, [[4], 100, [[4], 111, [[4], 116, [[4], 110, [[4], 101, [[4], 116, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[4], [[4], 68, [[4], 79, [[4], 84, [[4], 78, [[4], 69, [[4], 84, [[4], 95, [[4], 67, [[4], 76, [[4], 73, [[4], 95, [[4], 84, [[4], 69, [[4], 76, [[4], 69, [[4], 77, [[4], 69, [[4], 84, [[4], 82, [[4], 89, [[4], 95, [[4], 79, [[4], 80, [[4], 84, [[4], 79, [[4], 85, [[4], 84, [[4], 61, [[4], 116, [[4], 114, [[4], 117, [[4], 101, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[4], [[4], 67, [[4], 76, [[4], 82, [[4], 95, [[4], 79, [[4], 80, [[4], 69, [[4], 78, [[4], 83, [[4], 83, [[4], 76, [[4], 95, [[4], 86, [[4], 69, [[4], 82, [[4], 83, [[4], 73, [[4], 79, [[4], 78, [[4], 95, [[4], 79, [[4], 86, [[4], 69, [[4], 82, [[4], 82, [[4], 73, [[4], 68, [[4], 69, [[4], 61, [[4], 52, [[4], 54, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[4], [[4], 78, [[4], 79, [[4], 95, [[4], 65, [[4], 84, [[4], 95, [[4], 66, [[4], 82, [[4], 73, [[4], 68, [[4], 71, [[4], 69, [[4], 61, [[4], 49, [3]]]]]]]]]]]]]]], [[4], [[4], 80, [[4], 87, [[4], 68, [[4], 61, [[4], 47, [[4], 104, [[4], 111, [[4], 109, [[4], 101, [[4], 47, [[4], 95, [[4], 47, [[4], 99, [[4], 47, [[4], 103, [[4], 111, [[4], 47, [[4], 115, [[4], 114, [[4], 99, [[4], 47, [[4], 103, [[4], 105, [[4], 116, [[4], 104, [[4], 117, [[4], 98, [[4], 46, [[4], 99, [[4], 111, [[4], 109, [[4], 47, [[4], 109, [[4], 101, [[4], 116, [[4], 97, [[4], 108, [[4], 101, [[4], 97, [[4], 112, [[4], 47, [[4], 103, [[4], 111, [[4], 45, [[4], 109, [[4], 97, [[4], 99, [[4], 104, [[4], 105, [[4], 110, [[4], 101, [[4], 115, [[4], 47, [[4], 116, [[4], 111, [[4], 121, [[4], 108, [[4], 97, [[4], 109, [[4], 47, [[4], 97, [[4], 108, [[4], 108, [[4], 100, [[4], 101, [[4], 109, [[4], 111, [[4], 115, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[4], [[4], 76, [[4], 79, [[4], 71, [[4], 78, [[4], 65, [[4], 77, [[4], 69, [[4], 61, [[4], 95, [3]]]]]]]]]], [[4], [[4], 88, [[4], 65, [[4], 85, [[4], 84, [[4], 72, [[4], 79, [[4], 82, [[4], 73, [[4], 84, [[4], 89, [[4], 61, [[4], 47, [[4], 104, [[4], 111, [[4], 109, [[4], 101, [[4], 47, [[4], 95, [[4], 47, [[4], 46, [[4], 88, [[4], 97, [[4], 117, [[4], 116, [[4], 104, [[4], 111, [[4], 114, [[4], 105, [[4], 116, [[4], 121, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[4], [[4], 87, [[4], 73, [[4], 78, [[4], 68, [[4], 79, [[4], 87, [[4], 80, [[4], 65, [[4], 84, [[4], 72, [[4], 61, [[4], 49, [3]]]]]]]]]]]]], [[4], [[4], 72, [[4], 79, [[4], 77, [[4], 69, [[4], 61, [[4], 47, [[4], 104, [[4], 111, [[4], 109, [[4], 101, [[4], 47, [[4], 95, [3]]]]]]]]]]]]], [[4], [[4], 76, [[4], 65, [[4], 78, [[4], 71, [[4], 61, [[4], 101, [[4], 110, [[4], 95, [[4], 85, [[4], 83, [[4], 46, [[4], 85, [[4], 84, [[4], 70, [[4], 45, [[4], 56, [3]]]]]]]]]]]]]]]]], [[4], [[4], 76, [[4], 83, [[4], 95, [[4], 67, [[4], 79, [[4], 76, [[4], 79, [[4], 82, [[4], 83, [[4], 61, [[4], 110, [[4], 111, [[4], 61, [[4], 48, [[4], 48, [[4], 58, [[4], 102, [[4], 105, [[4], 61, [[4], 48, [[4], 48, [[4], 58, [[4], 100, [[4], 105, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 52, [[4], 58, [[4], 108, [[4], 110, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 54, [[4], 58, [[4], 112, [[4], 105, [[4], 61, [[4], 52, [[4], 48, [[4], 59, [[4], 51, [[4], 51, [[4], 58, [[4], 115, [[4], 111, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 100, [[4], 111, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 98, [[4], 100, [[4], 61, [[4], 52, [[4], 48, [[4], 59, [[4], 51, [[4], 51, [[4], 59, [[4], 48, [[4], 49, [[4], 58, [[4], 99, [[4], 100, [[4], 61, [[4], 52, [[4], 48, [[4], 59, [[4], 51, [[4], 51, [[4], 59, [[4], 48, [[4], 49, [[4], 58, [[4], 111, [[4], 114, [[4], 61, [[4], 52, [[4], 48, [[4], 59, [[4], 51, [[4], 49, [[4], 59, [[4], 48, [[4], 49, [[4], 58, [[4], 109, [[4], 105, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 48, [[4], 53, [[4], 59, [[4], 51, [[4], 55, [[4], 59, [[4], 52, [[4], 49, [[4], 58, [[4], 115, [[4], 117, [[4], 61, [[4], 51, [[4], 55, [[4], 59, [[4], 52, [[4], 49, [[4], 58, [[4], 115, [[4], 103, [[4], 61, [[4], 51, [[4], 48, [[4], 59, [[4], 52, [[4], 51, [[4], 58, [[4], 99, [[4], 97, [[4], 61, [[4], 51, [[4], 48, [[4], 59, [[4], 52, [[4], 49, [[4], 58, [[4], 116, [[4], 119, [[4], 61, [[4], 51, [[4], 48, [[4], 59, [[4], 52, [[4], 50, [[4], 58, [[4], 111, [[4], 119, [[4], 61, [[4], 51, [[4], 52, [[4], 59, [[4], 52, [[4], 50, [[4], 58, [[4], 115, [[4], 116, [[4], 61, [[4], 51, [[4], 55, [[4], 59, [[4], 52, [[4], 52, [[4], 58, [[4], 101, [[4], 120, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 50, [[4], 58, [[4], 42, [[4], 46, [[4], 116, [[4], 97, [[4], 114, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 116, [[4], 103, [[4], 122, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 115, [[4], 118, [[4], 103, [[4], 122, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 97, [[4], 114, [[4], 106, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 116, [[4], 97, [[4], 122, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 108, [[4], 122, [[4], 104, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 108, [[4], 122, [[4], 109, [[4], 97, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 122, [[4], 105, [[4], 112, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 122, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 90, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 100, [[4], 122, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 103, [[4], 122, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 98, [[4], 122, [[4], 50, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 116, [[4], 98, [[4], 122, [[4], 50, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 98, [[4], 122, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 116, [[4], 122, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 100, [[4], 101, [[4], 98, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 114, [[4], 112, [[4], 109, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 106, [[4], 97, [[4], 114, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 114, [[4], 97, [[4], 114, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 97, [[4], 99, [[4], 101, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 122, [[4], 111, [[4], 111, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 99, [[4], 112, [[4], 105, [[4], 111, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 55, [[4], 122, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 114, [[4], 122, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 49, [[4], 58, [[4], 42, [[4], 46, [[4], 106, [[4], 112, [[4], 103, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 106, [[4], 112, [[4], 101, [[4], 103, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 103, [[4], 105, [[4], 102, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 98, [[4], 109, [[4], 112, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 112, [[4], 98, [[4], 109, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 112, [[4], 103, [[4], 109, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 112, [[4], 112, [[4], 109, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 116, [[4], 103, [[4], 97, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 120, [[4], 98, [[4], 109, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 120, [[4], 112, [[4], 109, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 116, [[4], 105, [[4], 102, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 116, [[4], 105, [[4], 102, [[4], 102, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 112, [[4], 110, [[4], 103, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 109, [[4], 110, [[4], 103, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 112, [[4], 99, [[4], 120, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 109, [[4], 111, [[4], 118, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 109, [[4], 112, [[4], 103, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 109, [[4], 112, [[4], 101, [[4], 103, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 109, [[4], 50, [[4], 118, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 109, [[4], 107, [[4], 118, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 111, [[4], 103, [[4], 109, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 109, [[4], 112, [[4], 52, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 109, [[4], 52, [[4], 118, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 109, [[4], 112, [[4], 52, [[4], 118, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 118, [[4], 111, [[4], 98, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 113, [[4], 116, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 110, [[4], 117, [[4], 118, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 119, [[4], 109, [[4], 118, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 97, [[4], 115, [[4], 102, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 114, [[4], 109, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 114, [[4], 109, [[4], 118, [[4], 98, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 102, [[4], 108, [[4], 99, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 97, [[4], 118, [[4], 105, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 102, [[4], 108, [[4], 105, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 103, [[4], 108, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 100, [[4], 108, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 120, [[4], 99, [[4], 102, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 120, [[4], 119, [[4], 100, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 121, [[4], 117, [[4], 118, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 115, [[4], 118, [[4], 103, [[4], 61, [[4], 48, [[4], 49, [[4], 59, [[4], 51, [[4], 53, [[4], 58, [[4], 42, [[4], 46, [[4], 97, [[4], 97, [[4], 99, [[4], 61, [[4], 48, [[4], 48, [[4], 59, [[4], 51, [[4], 54, [[4], 58, [[4], 42, [[4], 46, [[4], 97, [[4], 117, [[4], 61, [[4], 48, [[4], 48, [[4], 59, [[4], 51, [[4], 54, [[4], 58, [[4], 42, [[4], 46, [[4], 102, [[4], 108, [[4], 97, [[4], 99, [[4], 61, [[4], 48, [[4], 48, [[4], 59, [[4], 51, [[4], 54, [[4], 58, [[4], 42, [[4], 46, [[4], 109, [[4], 105, [[4], 100, [[4], 61, [[4], 48, [[4], 48, [[4], 59, [[4], 51, [[4], 54, [[4], 58, [[4], 42, [[4], 46, [[4], 109, [[4], 105, [[4], 100, [[4], 105, [[4], 61, [[4], 48, [[4], 48, [[4], 59, [[4], 51, [[4], 54, [[4], 58, [[4], 42, [[4], 46, [[4], 109, [[4], 107, [[4], 97, [[4], 61, [[4], 48, [[4], 48, [[4], 59, [[4], 51, [[4], 54, [[4], 58, [[4], 42, [[4], 46, [[4], 109, [[4], 112, [[4], 51, [[4], 61, [[4], 48, [[4], 48, [[4], 59, [[4], 51, [[4], 54, [[4], 58, [[4], 42, [[4], 46, [[4], 109, [[4], 112, [[4], 99, [[4], 61, [[4], 48, [[4], 48, [[4], 59, [[4], 51, [[4], 54, [[4], 58, [[4], 42, [[4], 46, [[4], 111, [[4], 103, [[4], 103, [[4], 61, [[4], 48, [[4], 48, [[4], 59, [[4], 51, [[4], 54, [[4], 58, [[4], 42, [[4], 46, [[4], 114, [[4], 97, [[4], 61, [[4], 48, [[4], 48, [[4], 59, [[4], 51, [[4], 54, [[4], 58, [[4], 42, [[4], 46, [[4], 119, [[4], 97, [[4], 118, [[4], 61, [[4], 48, [[4], 48, [[4], 59, [[4], 51, [[4], 54, [[4], 58, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[4], [[4], 86, [[4], 84, [[4], 69, [[4], 95, [[4], 86, [[4], 69, [[4], 82, [[4], 83, [[4], 73, [[4], 79, [[4], 78, [[4], 61, [[4], 53, [[4], 54, [[4], 48, [[4], 51, [3]]]]]]]]]]]]]]]]], [[4], [[4], 84, [[4], 69, [[4], 82, [[4], 77, [[4], 61, [[4], 120, [[4], 116, [[4], 101, [[4], 114, [[4], 109, [[4], 45, [[4], 50, [[4], 53, [[4], 54, [[4], 99, [[4], 111, [[4], 108, [[4], 111, [[4], 114, [3]]]]]]]]]]]]]]]]]]]], [[4], [[4], 85, [[4], 83, [[4], 69, [[4], 82, [[4], 61, [[4], 95, [3]]]]]]], [[4], [[4], 68, [[4], 73, [[4], 83, [[4], 80, [[4], 76, [[4], 65, [[4], 89, [[4], 61, [[4], 58, [[4], 48, [3]]]]]]]]]]], [[4], [[4], 83, [[4], 72, [[4], 76, [[4], 86, [[4], 76, [[4], 61, [[4], 50, [3]]]]]]]], [[4], [[4], 77, [[4], 79, [[4], 90, [[4], 95, [[4], 80, [[4], 76, [[4], 85, [[4], 71, [[4], 73, [[4], 78, [[4], 95, [[4], 80, [[4], 65, [[4], 84, [[4], 72, [[4], 61, [[4], 47, [[4], 117, [[4], 115, [[4], 114, [[4], 47, [[4], 108, [[4], 105, [[4], 98, [[4], 47, [[4], 109, [[4], 111, [[4], 122, [[4], 105, [[4], 108, [[4], 108, [[4], 97, [[4], 47, [[4], 112, [[4], 108, [[4], 117, [[4], 103, [[4], 105, [[4], 110, [[4], 115, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[4], [[4], 76, [[4], 67, [[4], 95, [[4], 67, [[4], 84, [[4], 89, [[4], 80, [[4], 69, [[4], 61, [[4], 101, [[4], 110, [[4], 95, [[4], 85, [[4], 83, [[4], 46, [[4], 85, [[4], 84, [[4], 70, [[4], 45, [[4], 56, [3]]]]]]]]]]]]]]]]]]]]], [[4], [[4], 80, [[4], 83, [[4], 49, [[4], 61, [[4], 92, [[4], 91, [[4], 92, [[4], 101, [[4], 91, [[4], 51, [[4], 48, [[4], 59, [[4], 49, [[4], 48, [[4], 48, [[4], 109, [[4], 92, [[4], 93, [[4], 92, [[4], 119, [[4], 92, [[4], 91, [[4], 92, [[4], 101, [[4], 91, [[4], 48, [[4], 48, [[4], 109, [[4], 92, [[4], 101, [[4], 91, [[4], 57, [[4], 48, [[4], 109, [[4], 92, [[4], 93, [[4], 194, [[4], 187, [[4], 32, [[4], 92, [[4], 91, [[4], 92, [[4], 101, [[4], 91, [[4], 48, [[4], 48, [[4], 109, [[4], 92, [[4], 93, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[4], [[4], 81, [[4], 84, [[4], 95, [[4], 65, [[4], 85, [[4], 84, [[4], 79, [[4], 95, [[4], 83, [[4], 67, [[4], 82, [[4], 69, [[4], 69, [[4], 78, [[4], 95, [[4], 83, [[4], 67, [[4], 65, [[4], 76, [[4], 69, [[4], 95, [[4], 70, [[4], 65, [[4], 67, [[4], 84, [[4], 79, [[4], 82, [[4], 61, [[4], 49, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[4], [[4], 76, [[4], 67, [[4], 95, [[4], 67, [[4], 79, [[4], 76, [[4], 76, [[4], 65, [[4], 84, [[4], 69, [[4], 61, [[4], 67, [3]]]]]]]]]]]]], [[4], [[4], 80, [[4], 65, [[4], 84, [[4], 72, [[4], 61, [[4], 47, [[4], 117, [[4], 115, [[4], 114, [[4], 47, [[4], 108, [[4], 111, [[4], 99, [[4], 97, [[4], 108, [[4], 47, [[4], 98, [[4], 105, [[4], 110, [[4], 58, [[4], 47, [[4], 98, [[4], 105, [[4], 110, [[4], 58, [[4], 47, [[4], 117, [[4], 115, [[4], 114, [[4], 47, [[4], 98, [[4], 105, [[4], 110, [[4], 58, [[4], 47, [[4], 117, [[4], 115, [[4], 114, [[4], 47, [[4], 108, [[4], 111, [[4], 99, [[4], 97, [[4], 108, [[4], 47, [[4], 115, [[4], 98, [[4], 105, [[4], 110, [[4], 58, [[4], 47, [[4], 117, [[4], 115, [[4], 114, [[4], 47, [[4], 115, [[4], 98, [[4], 105, [[4], 110, [[4], 58, [[4], 47, [[4], 115, [[4], 98, [[4], 105, [[4], 110, [[4], 58, [[4], 47, [[4], 104, [[4], 111, [[4], 109, [[4], 101, [[4], 47, [[4], 95, [[4], 47, [[4], 98, [[4], 58, [[4], 47, [[4], 104, [[4], 111, [[4], 109, [[4], 101, [[4], 47, [[4], 95, [[4], 47, [[4], 99, [[4], 47, [[4], 103, [[4], 111, [[4], 47, [[4], 98, [[4], 105, [[4], 110, [[4], 58, [[4], 47, [[4], 104, [[4], 111, [[4], 109, [[4], 101, [[4], 47, [[4], 95, [[4], 47, [[4], 46, [[4], 108, [[4], 111, [[4], 99, [[4], 97, [[4], 108, [[4], 47, [[4], 98, [[4], 105, [[4], 110, [[4], 58, [[4], 47, [[4], 117, [[4], 115, [[4], 114, [[4], 47, [[4], 108, [[4], 111, [[4], 99, [[4], 97, [[4], 108, [[4], 47, [[4], 103, [[4], 111, [[4], 47, [[4], 98, [[4], 105, [[4], 110, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[4], [[4], 77, [[4], 65, [[4], 73, [[4], 76, [[4], 61, [[4], 47, [[4], 118, [[4], 97, [[4], 114, [[4], 47, [[4], 109, [[4], 97, [[4], 105, [[4], 108, [[4], 47, [[4], 95, [3]]]]]]]]]]]]]]]]], [[4], [[4], 71, [[4], 73, [[4], 84, [[4], 95, [[4], 84, [[4], 69, [[4], 82, [[4], 77, [[4], 73, [[4], 78, [[4], 65, [[4], 76, [[4], 95, [[4], 80, [[4], 82, [[4], 79, [[4], 77, [[4], 80, [[4], 84, [[4], 61, [[4], 49, [3]]]]]]]]]]]]]]]]]]]]]], [[4], [[4], 79, [[4], 76, [[4], 68, [[4], 80, [[4], 87, [[4], 68, [[4], 61, [[4], 47, [[4], 104, [[4], 111, [[4], 109, [[4], 101, [[4], 47, [[4], 95, [3]]]]]]]]]]]]]]], [[4], [[4], 71, [[4], 79, [[4], 80, [[4], 65, [[4], 84, [[4], 72, [[4], 61, [[4], 47, [[4], 104, [[4], 111, [[4], 109, [[4], 101, [[4], 47, [[4], 95, [[4], 47, [[4], 99, [[4], 47, [[4], 103, [[4], 111, [3]]]]]]]]]]]]]]]]]]]], [[4], [[4], 65, [[4], 84, [[4], 77, [[4], 79, [[4], 95, [[4], 75, [[4], 73, [[4], 84, [[4], 83, [[4], 95, [[4], 68, [[4], 73, [[4], 82, [[4], 83, [[4], 61, [[4], 47, [[4], 104, [[4], 111, [[4], 109, [[4], 101, [[4], 47, [[4], 95, [[4], 47, [[4], 99, [[4], 47, [[4], 97, [[4], 47, [[4], 107, [[4], 105, [[4], 116, [[4], 115, [[4], 58, [[4], 47, [[4], 102, [[4], 111, [[4], 111, [[4], 47, [[4], 98, [[4], 97, [[4], 114, [[4], 47, [[4], 98, [[4], 97, [[4], 122, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[4], [[4], 95, [[4], 61, [[4], 47, [[4], 104, [[4], 111, [[4], 109, [[4], 101, [[4], 47, [[4], 95, [[4], 47, [[4], 99, [[4], 47, [[4], 103, [[4], 111, [[4], 47, [[4], 98, [[4], 105, [[4], 110, [[4], 47, [[4], 97, [[4], 116, [[4], 101, [[4], 109, [3]]]]]]]]]]]]]]]]]]]]]]]], [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
FREF:	appdemo.comptryouts.main	curStackLen=2	numArgs=2		[[5], [[22], "0", 0], [23], [-1010101]]
CALL:	curStackLen=0	numArgs=3		[[5], [[22], [[4], [[4], 57, [3]], [3]], 0], [23], [-1010101]]
FREF:	[5]std.num.parseUnsigned	curStackLen=3	numArgs=1		["0", [[6], [[4], 101, [[4], 109, [[4], 112, [[4], 116, [[4], 121, [[4], 32, [[4], 105, [[4], 110, [[4], 112, [[4], 117, [[4], 116, [3]]]]]]]]]]]]], [[7], "0", [[19], [21], "0"]]]
CALL:	curStackLen=2	numArgs=2		[[[22], [[4], [[4], 57, [3]], [3]], 0], [[6], [[4], 101, [[4], 109, [[4], 112, [[4], 116, [[4], 121, [[4], 32, [[4], 105, [[4], 110, [[4], 112, [[4], 117, [[4], 116, [3]]]]]]]]]]]]], [[7], [[22], [[4], [[4], 57, [3]], [3]], 0], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]]]
CALL:	curStackLen=4	numArgs=2		[[22], [[4], [[4], 57, [3]], [3]], 0]
FREF:	[22]std.list.at	curStackLen=6	numArgs=2		[[-6], "1", 0, [[14], "0"], [[22], [[16], "0"], [[-1], -1, "1"]]]
CALL:	curStackLen=4	numArgs=4		[[-6], 0, 0, [[14], [[4], [[4], 57, [3]], [3]]], [[22], [[16], [[4], [[4], 57, [3]], [3]]], [[-1], -1, 0]]]
FREF:	EQ	curStackLen=8	numArgs=2		{0 = 0}
	INUM:	0
	INUM:	0
FREF:	[1]std.True	curStackLen=6	numArgs=2		"0"
CALL:	curStackLen=4	numArgs=1		[[14], [[4], [[4], 57, [3]], [3]]]
FREF:	[14]std.list.-<	curStackLen=5	numArgs=1		["0", [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 45, [[4], 60, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [1]]
CALL:	curStackLen=4	numArgs=2		[[[4], [[4], 57, [3]], [3]], null, [1]]
CALL:	curStackLen=6	numArgs=2		[[4], [[4], 57, [3]], [3]]
FREF:	[4]std.ListLink	curStackLen=8	numArgs=4		["3", "0", "1"]
CALL:	curStackLen=4	numArgs=2		[[1], [[4], 57, [3]], null]
FREF:	[1]std.True	curStackLen=6	numArgs=2		"0"
CALL:	curStackLen=4	numArgs=2		[[4], 57, [3]]
FREF:	[4]std.ListLink	curStackLen=6	numArgs=4		["3", "0", "1"]
CALL:	curStackLen=2	numArgs=2		[[[7], [[22], [[4], [[4], 57, [3]], [3]], 0], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]], null, null]
CALL:	curStackLen=4	numArgs=2		[[7], [[22], [[4], [[4], 57, [3]], [3]], 0], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]]
FREF:	[7]std.num.parseUnsigned//lam://shr:digits165//lam://0//1599166	curStackLen=6	numArgs=4		[[8], [11], "1", [12], [[10], [[13], "1", [[-1], -1, ["0", 0, [18]]]]]]
CALL:	curStackLen=2	numArgs=4		[[8], [11], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [12], [[10], [[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]]
FREF:	[8]std.list.findWhere//lcl:more0	curStackLen=6	numArgs=2		["1", [2], [[9], "0"]]
CALL:	curStackLen=4	numArgs=2		[[[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [2], [[9], [11]]]
CALL:	curStackLen=6	numArgs=2		[[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]
FREF:	[19]std.list.each//lcl:more0	curStackLen=8	numArgs=2		["1", [3], [[20], "0"]]
CALL:	curStackLen=6	numArgs=2		[[[22], [[4], [[4], 57, [3]], [3]], 0], [3], [[20], [21]]]
CALL:	curStackLen=8	numArgs=2		[[22], [[4], [[4], 57, [3]], [3]], 0]
FREF:	[22]std.list.at	curStackLen=10	numArgs=2		[[-6], "1", 0, [[14], "0"], [[22], [[16], "0"], [[-1], -1, "1"]]]
CALL:	curStackLen=8	numArgs=4		[[-6], 0, 0, [[14], [[4], [[4], 57, [3]], [3]]], [[22], [[16], [[4], [[4], 57, [3]], [3]]], [[-1], -1, 0]]]
FREF:	EQ	curStackLen=12	numArgs=2		{0 = 0}
	INUM:	0
	INUM:	0
FREF:	[1]std.True	curStackLen=10	numArgs=2		"0"
CALL:	curStackLen=8	numArgs=1		[[14], [[4], [[4], 57, [3]], [3]]]
FREF:	[14]std.list.-<	curStackLen=9	numArgs=1		["0", [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 45, [[4], 60, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [1]]
CALL:	curStackLen=8	numArgs=2		[[[4], [[4], 57, [3]], [3]], null, [1]]
CALL:	curStackLen=10	numArgs=2		[[4], [[4], 57, [3]], [3]]
FREF:	[4]std.ListLink	curStackLen=12	numArgs=4		["3", "0", "1"]
CALL:	curStackLen=8	numArgs=2		[[1], [[4], 57, [3]], null]
FREF:	[1]std.True	curStackLen=10	numArgs=2		"0"
CALL:	curStackLen=8	numArgs=2		[[4], 57, [3]]
FREF:	[4]std.ListLink	curStackLen=10	numArgs=4		["3", "0", "1"]
CALL:	curStackLen=6	numArgs=2		[[[20], [21]], 57, [3]]
CALL:	curStackLen=8	numArgs=1		[[20], [21]]
FREF:	[20]std.list.each//lcl:more0//lam:item175	curStackLen=9	numArgs=3		[[4], ["0", "1"], [[19], "0", "2"]]
CALL:	curStackLen=6	numArgs=2		[[4], [[21], 57], [[19], [21], [3]]]
FREF:	[4]std.ListLink	curStackLen=8	numArgs=4		["3", "0", "1"]
CALL:	curStackLen=4	numArgs=2		[[[9], [11]], [[21], 57], [[19], [21], [3]]]
CALL:	curStackLen=6	numArgs=1		[[9], [11]]
FREF:	[9]std.list.findWhere//lcl:more0//lam:item168	curStackLen=7	numArgs=3		["0", "1", [[10], "1"], [[8], "0", "2"]]
CALL:	curStackLen=4	numArgs=3		[[11], [[21], 57], [[10], [[21], 57]], [[8], [11], [[19], [21], [3]]]]
FREF:	[11]std.num.parseUnsigned//lam://shr:digits165//lam://0//1599166//lam://lam//1//1612169	curStackLen=7	numArgs=1		[[-7], "0", 0]
CALL:	curStackLen=6	numArgs=2		[[-7], [[21], 57], 0]
FREF:	LT	curStackLen=8	numArgs=2		{[[21], 57] < 0}
	CALL:	curStackLen=0	numArgs=1		[[21], 57]
	FREF:	[21]std.num.parseUnsigned//lcl:chartodigit1	curStackLen=1	numArgs=1		[[-8], "0", 47, [[-7], "0", 58], [2], [[-2], "0", 48], [[-2], 0, "0"]]
	CALL:	curStackLen=0	numArgs=6		[[-8], 57, 47, [[-7], 57, 58], [2], [[-2], 57, 48], [[-2], 0, 57]]
	FREF:	GT	curStackLen=6	numArgs=2		{57 > 47}
		INUM:	57
		INUM:	47
	FREF:	[1]std.True	curStackLen=4	numArgs=2		"0"
	CALL:	curStackLen=2	numArgs=2		[[-7], 57, 58]
	FREF:	LT	curStackLen=4	numArgs=2		{57 < 58}
		INUM:	57
		INUM:	58
	FREF:	[1]std.True	curStackLen=2	numArgs=2		"0"
	CALL:	curStackLen=0	numArgs=2		[[-2], 57, 48]
	FREF:	SUB	curStackLen=2	numArgs=2		{57 - 48}
		INUM:	57
		INUM:	48
	INUM:	9
	INUM:	0
FREF:	[2]std.False	curStackLen=6	numArgs=2		"1"
CALL:	curStackLen=4	numArgs=2		[[8], [11], [[19], [21], [3]]]
FREF:	[8]std.list.findWhere//lcl:more0	curStackLen=6	numArgs=2		["1", [2], [[9], "0"]]
CALL:	curStackLen=4	numArgs=2		[[[19], [21], [3]], [2], [[9], [11]]]
CALL:	curStackLen=6	numArgs=2		[[19], [21], [3]]
FREF:	[19]std.list.each//lcl:more0	curStackLen=8	numArgs=2		["1", [3], [[20], "0"]]
CALL:	curStackLen=6	numArgs=2		[[3], [3], null]
FREF:	[3]std.ListEnd	curStackLen=8	numArgs=2		"0"
FREF:	[3]std.ListEnd	curStackLen=6	numArgs=2		"0"
FREF:	[2]std.False	curStackLen=4	numArgs=2		"1"
CALL:	curStackLen=2	numArgs=1		[[10], [[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]
FREF:	[10]std.Have	curStackLen=3	numArgs=3		["1", "0"]
CALL:	curStackLen=0	numArgs=1		[[23], [[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]
FREF:	[23]std.num.toString	curStackLen=1	numArgs=1		[[-8], "0", -1, [[24], [3], [[26], "0"]], [[4], 45, [[24], [3], [[26], [[-7], "0", 0, [[-2], 0, "0"], "0"]]]]]
CALL:	curStackLen=0	numArgs=4		[[-8], [[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], -1, [[24], [3], [[26], [[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]], [[4], 45, [[24], [3], [[26], [[-7], [[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], 0, [[-2], 0, [[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]], [[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]]]]]
FREF:	GT	curStackLen=4	numArgs=2		{[[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]] > -1}
	CALL:	curStackLen=0	numArgs=2		[[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]
	FREF:	[13]std.num.parseUnsigned//lcl:more0	curStackLen=2	numArgs=2		[[-1], [[-3], [[14], "0"], [[-8], "1", -1, [[15], 10, "1"], [[-1010101], [[4], 115, [[4], 116, [[4], 100, [[4], 46, [[4], 110, [[4], 117, [[4], 109, [[4], 46, [[4], 112, [[4], 111, [[4], 119, [[4], 32, [[4], 99, [[4], 97, [[4], 108, [[4], 108, [[4], 101, [[4], 100, [[4], 32, [[4], 119, [[4], 105, [[4], 116, [[4], 104, [[4], 32, [[4], 110, [[4], 101, [[4], 103, [[4], 97, [[4], 116, [[4], 105, [[4], 118, [[4], 101, [[4], 32, [[4], 101, [[4], 120, [[4], 112, [[4], 58, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], "1"]]], [[16], "0", 0, [[17], "1", "0"]]]
	CALL:	curStackLen=0	numArgs=2		[[-1], [[-3], [[14], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]], [[-8], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], -1, [[15], 10, [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], [[-1010101], [[4], 115, [[4], 116, [[4], 100, [[4], 46, [[4], 110, [[4], 117, [[4], 109, [[4], 46, [[4], 112, [[4], 111, [[4], 119, [[4], 32, [[4], 99, [[4], 97, [[4], 108, [[4], 108, [[4], 101, [[4], 100, [[4], 32, [[4], 119, [[4], 105, [[4], 116, [[4], 104, [[4], 32, [[4], 110, [[4], 101, [[4], 103, [[4], 97, [[4], 116, [[4], 105, [[4], 118, [[4], 101, [[4], 32, [[4], 101, [[4], 120, [[4], 112, [[4], 58, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]], [[16], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], 0, [[17], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]]]]
	FREF:	ADD	curStackLen=2	numArgs=2		{[[-3], [[14], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]], [[-8], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], -1, [[15], 10, [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], [[-1010101], [[4], 115, [[4], 116, [[4], 100, [[4], 46, [[4], 110, [[4], 117, [[4], 109, [[4], 46, [[4], 112, [[4], 111, [[4], 119, [[4], 32, [[4], 99, [[4], 97, [[4], 108, [[4], 108, [[4], 101, [[4], 100, [[4], 32, [[4], 119, [[4], 105, [[4], 116, [[4], 104, [[4], 32, [[4], 110, [[4], 101, [[4], 103, [[4], 97, [[4], 116, [[4], 105, [[4], 118, [[4], 101, [[4], 32, [[4], 101, [[4], 120, [[4], 112, [[4], 58, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]] + [[16], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], 0, [[17], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]]]}
		CALL:	curStackLen=0	numArgs=2		[[-3], [[14], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]], [[-8], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], -1, [[15], 10, [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], [[-1010101], [[4], 115, [[4], 116, [[4], 100, [[4], 46, [[4], 110, [[4], 117, [[4], 109, [[4], 46, [[4], 112, [[4], 111, [[4], 119, [[4], 32, [[4], 99, [[4], 97, [[4], 108, [[4], 108, [[4], 101, [[4], 100, [[4], 32, [[4], 119, [[4], 105, [[4], 116, [[4], 104, [[4], 32, [[4], 110, [[4], 101, [[4], 103, [[4], 97, [[4], 116, [[4], 105, [[4], 118, [[4], 101, [[4], 32, [[4], 101, [[4], 120, [[4], 112, [[4], 58, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]]
		FREF:	MUL	curStackLen=2	numArgs=2		{[[14], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]] * [[-8], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], -1, [[15], 10, [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], [[-1010101], [[4], 115, [[4], 116, [[4], 100, [[4], 46, [[4], 110, [[4], 117, [[4], 109, [[4], 46, [[4], 112, [[4], 111, [[4], 119, [[4], 32, [[4], 99, [[4], 97, [[4], 108, [[4], 108, [[4], 101, [[4], 100, [[4], 32, [[4], 119, [[4], 105, [[4], 116, [[4], 104, [[4], 32, [[4], 110, [[4], 101, [[4], 103, [[4], 97, [[4], 116, [[4], 105, [[4], 118, [[4], 101, [[4], 32, [[4], 101, [[4], 120, [[4], 112, [[4], 58, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]}
			CALL:	curStackLen=0	numArgs=1		[[14], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]]
			FREF:	[14]std.list.-<	curStackLen=1	numArgs=1		["0", [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 45, [[4], 60, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [1]]
			CALL:	curStackLen=0	numArgs=2		[[[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 45, [[4], 60, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [1]]
			CALL:	curStackLen=2	numArgs=2		[[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]
			FREF:	[19]std.list.each//lcl:more0	curStackLen=4	numArgs=2		["1", [3], [[20], "0"]]
			CALL:	curStackLen=2	numArgs=2		[[[22], [[4], [[4], 57, [3]], [3]], 0], [3], [[20], [21]]]
			CALL:	curStackLen=4	numArgs=2		[[22], [[4], [[4], 57, [3]], [3]], 0]
			FREF:	[22]std.list.at	curStackLen=6	numArgs=2		[[-6], "1", 0, [[14], "0"], [[22], [[16], "0"], [[-1], -1, "1"]]]
			CALL:	curStackLen=4	numArgs=4		[[-6], 0, 0, [[14], [[4], [[4], 57, [3]], [3]]], [[22], [[16], [[4], [[4], 57, [3]], [3]]], [[-1], -1, 0]]]
			FREF:	EQ	curStackLen=8	numArgs=2		{0 = 0}
				INUM:	0
				INUM:	0
			FREF:	[1]std.True	curStackLen=6	numArgs=2		"0"
			CALL:	curStackLen=4	numArgs=1		[[14], [[4], [[4], 57, [3]], [3]]]
			FREF:	[14]std.list.-<	curStackLen=5	numArgs=1		["0", [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 45, [[4], 60, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [1]]
			CALL:	curStackLen=4	numArgs=2		[[[4], [[4], 57, [3]], [3]], null, [1]]
			CALL:	curStackLen=6	numArgs=2		[[4], [[4], 57, [3]], [3]]
			FREF:	[4]std.ListLink	curStackLen=8	numArgs=4		["3", "0", "1"]
			CALL:	curStackLen=4	numArgs=2		[[1], [[4], 57, [3]], null]
			FREF:	[1]std.True	curStackLen=6	numArgs=2		"0"
			CALL:	curStackLen=4	numArgs=2		[[4], 57, [3]]
			FREF:	[4]std.ListLink	curStackLen=6	numArgs=4		["3", "0", "1"]
			CALL:	curStackLen=2	numArgs=2		[[[20], [21]], 57, [3]]
			CALL:	curStackLen=4	numArgs=1		[[20], [21]]
			FREF:	[20]std.list.each//lcl:more0//lam:item175	curStackLen=5	numArgs=3		[[4], ["0", "1"], [[19], "0", "2"]]
			CALL:	curStackLen=2	numArgs=2		[[4], [[21], 57], [[19], [21], [3]]]
			FREF:	[4]std.ListLink	curStackLen=4	numArgs=4		["3", "0", "1"]
			CALL:	curStackLen=0	numArgs=2		[[1], [[21], 57], null]
			FREF:	[1]std.True	curStackLen=2	numArgs=2		"0"
			CALL:	curStackLen=0	numArgs=1		[[21], 57]
			FREF:	[21]std.num.parseUnsigned//lcl:chartodigit1	curStackLen=1	numArgs=1		[[-8], "0", 47, [[-7], "0", 58], [2], [[-2], "0", 48], [[-2], 0, "0"]]
			CALL:	curStackLen=0	numArgs=6		[[-8], 57, 47, [[-7], 57, 58], [2], [[-2], 57, 48], [[-2], 0, 57]]
			FREF:	GT	curStackLen=6	numArgs=2		{57 > 47}
				INUM:	57
				INUM:	47
			FREF:	[1]std.True	curStackLen=4	numArgs=2		"0"
			CALL:	curStackLen=2	numArgs=2		[[-7], 57, 58]
			FREF:	LT	curStackLen=4	numArgs=2		{57 < 58}
				INUM:	57
				INUM:	58
			FREF:	[1]std.True	curStackLen=2	numArgs=2		"0"
			CALL:	curStackLen=0	numArgs=2		[[-2], 57, 48]
			FREF:	SUB	curStackLen=2	numArgs=2		{57 - 48}
				INUM:	57
				INUM:	48
			INUM:	9
			CALL:	curStackLen=0	numArgs=4		[[-8], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], -1, [[15], 10, [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], [[-1010101], [[4], 115, [[4], 116, [[4], 100, [[4], 46, [[4], 110, [[4], 117, [[4], 109, [[4], 46, [[4], 112, [[4], 111, [[4], 119, [[4], 32, [[4], 99, [[4], 97, [[4], 108, [[4], 108, [[4], 101, [[4], 100, [[4], 32, [[4], 119, [[4], 105, [[4], 116, [[4], 104, [[4], 32, [[4], 110, [[4], 101, [[4], 103, [[4], 97, [[4], 116, [[4], 105, [[4], 118, [[4], 101, [[4], 32, [[4], 101, [[4], 120, [[4], 112, [[4], 58, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]
			FREF:	GT	curStackLen=4	numArgs=2		{[[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]] > -1}
				CALL:	curStackLen=0	numArgs=2		[[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]
				FREF:	ADD	curStackLen=2	numArgs=2		{-1 + [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]}
					INUM:	-1
					CALL:	curStackLen=0	numArgs=2		[[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]
					CALL:	curStackLen=2	numArgs=2		[[22], [[4], [[4], 57, [3]], [3]], 0]
					FREF:	[22]std.list.at	curStackLen=4	numArgs=2		[[-6], "1", 0, [[14], "0"], [[22], [[16], "0"], [[-1], -1, "1"]]]
					CALL:	curStackLen=2	numArgs=4		[[-6], 0, 0, [[14], [[4], [[4], 57, [3]], [3]]], [[22], [[16], [[4], [[4], 57, [3]], [3]]], [[-1], -1, 0]]]
					FREF:	EQ	curStackLen=6	numArgs=2		{0 = 0}
						INUM:	0
						INUM:	0
					FREF:	[1]std.True	curStackLen=4	numArgs=2		"0"
					CALL:	curStackLen=2	numArgs=1		[[14], [[4], [[4], 57, [3]], [3]]]
					FREF:	[14]std.list.-<	curStackLen=3	numArgs=1		["0", [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 45, [[4], 60, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [1]]
					CALL:	curStackLen=2	numArgs=2		[[[4], [[4], 57, [3]], [3]], null, [1]]
					CALL:	curStackLen=4	numArgs=2		[[4], [[4], 57, [3]], [3]]
					FREF:	[4]std.ListLink	curStackLen=6	numArgs=4		["3", "0", "1"]
					CALL:	curStackLen=2	numArgs=2		[[1], [[4], 57, [3]], null]
					FREF:	[1]std.True	curStackLen=4	numArgs=2		"0"
					CALL:	curStackLen=2	numArgs=2		[[4], 57, [3]]
					FREF:	[4]std.ListLink	curStackLen=4	numArgs=4		["3", "0", "1"]
					CALL:	curStackLen=0	numArgs=2		[[18], null, [3]]
					FREF:	[18]std.list.len//lam://0//1262173	curStackLen=2	numArgs=2		[[-1], 1, ["1", 0, [18]]]
					CALL:	curStackLen=0	numArgs=2		[[-1], 1, [[3], 0, null]]
					FREF:	ADD	curStackLen=2	numArgs=2		{1 + [[3], 0, null]}
						INUM:	1
						CALL:	curStackLen=0	numArgs=2		[[3], 0, null]
						FREF:	[3]std.ListEnd	curStackLen=2	numArgs=2		"0"
						INUM:	0
					INUM:	1
				INUM:	0
				INUM:	-1
			FREF:	[1]std.True	curStackLen=2	numArgs=2		"0"
			CALL:	curStackLen=0	numArgs=2		[[15], 10, [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]
			FREF:	[15]std.num.pow//lcl:mults0	curStackLen=2	numArgs=2		[[-6], "1", 0, 1, [[-3], "0", [[15], "0", [[-1], -1, "1"]]]]
			CALL:	curStackLen=0	numArgs=4		[[-6], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], 0, 1, [[-3], 10, [[15], 10, [[-1], -1, [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]]]
			FREF:	EQ	curStackLen=4	numArgs=2		{[[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]] = 0}
				CALL:	curStackLen=0	numArgs=2		[[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]
				FREF:	ADD	curStackLen=2	numArgs=2		{-1 + [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]}
					INUM:	-1
					CALL:	curStackLen=0	numArgs=2		[[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]
					CALL:	curStackLen=2	numArgs=2		[[22], [[4], [[4], 57, [3]], [3]], 0]
					FREF:	[22]std.list.at	curStackLen=4	numArgs=2		[[-6], "1", 0, [[14], "0"], [[22], [[16], "0"], [[-1], -1, "1"]]]
					CALL:	curStackLen=2	numArgs=4		[[-6], 0, 0, [[14], [[4], [[4], 57, [3]], [3]]], [[22], [[16], [[4], [[4], 57, [3]], [3]]], [[-1], -1, 0]]]
					FREF:	EQ	curStackLen=6	numArgs=2		{0 = 0}
						INUM:	0
						INUM:	0
					FREF:	[1]std.True	curStackLen=4	numArgs=2		"0"
					CALL:	curStackLen=2	numArgs=1		[[14], [[4], [[4], 57, [3]], [3]]]
					FREF:	[14]std.list.-<	curStackLen=3	numArgs=1		["0", [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 45, [[4], 60, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [1]]
					CALL:	curStackLen=2	numArgs=2		[[[4], [[4], 57, [3]], [3]], null, [1]]
					CALL:	curStackLen=4	numArgs=2		[[4], [[4], 57, [3]], [3]]
					FREF:	[4]std.ListLink	curStackLen=6	numArgs=4		["3", "0", "1"]
					CALL:	curStackLen=2	numArgs=2		[[1], [[4], 57, [3]], null]
					FREF:	[1]std.True	curStackLen=4	numArgs=2		"0"
					CALL:	curStackLen=2	numArgs=2		[[4], 57, [3]]
					FREF:	[4]std.ListLink	curStackLen=4	numArgs=4		["3", "0", "1"]
					CALL:	curStackLen=0	numArgs=2		[[18], null, [3]]
					FREF:	[18]std.list.len//lam://0//1262173	curStackLen=2	numArgs=2		[[-1], 1, ["1", 0, [18]]]
					CALL:	curStackLen=0	numArgs=2		[[-1], 1, [[3], 0, null]]
					FREF:	ADD	curStackLen=2	numArgs=2		{1 + [[3], 0, null]}
						INUM:	1
						CALL:	curStackLen=0	numArgs=2		[[3], 0, null]
						FREF:	[3]std.ListEnd	curStackLen=2	numArgs=2		"0"
						INUM:	0
					INUM:	1
				INUM:	0
				INUM:	0
			FREF:	[1]std.True	curStackLen=2	numArgs=2		"0"
			INUM:	1
		INUM:	9
		CALL:	curStackLen=0	numArgs=3		[[16], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], 0, [[17], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]]]
		FREF:	[16]std.list.>-	curStackLen=3	numArgs=1		["0", [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 62, [[4], 45, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [2]]
		CALL:	curStackLen=2	numArgs=2		[[[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 62, [[4], 45, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [2]]
		CALL:	curStackLen=4	numArgs=2		[[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]
		FREF:	[19]std.list.each//lcl:more0	curStackLen=6	numArgs=2		["1", [3], [[20], "0"]]
		CALL:	curStackLen=4	numArgs=2		[[[22], [[4], [[4], 57, [3]], [3]], 0], [3], [[20], [21]]]
		CALL:	curStackLen=6	numArgs=2		[[22], [[4], [[4], 57, [3]], [3]], 0]
		FREF:	[22]std.list.at	curStackLen=8	numArgs=2		[[-6], "1", 0, [[14], "0"], [[22], [[16], "0"], [[-1], -1, "1"]]]
		CALL:	curStackLen=6	numArgs=4		[[-6], 0, 0, [[14], [[4], [[4], 57, [3]], [3]]], [[22], [[16], [[4], [[4], 57, [3]], [3]]], [[-1], -1, 0]]]
		FREF:	EQ	curStackLen=10	numArgs=2		{0 = 0}
			INUM:	0
			INUM:	0
		FREF:	[1]std.True	curStackLen=8	numArgs=2		"0"
		CALL:	curStackLen=6	numArgs=1		[[14], [[4], [[4], 57, [3]], [3]]]
		FREF:	[14]std.list.-<	curStackLen=7	numArgs=1		["0", [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 45, [[4], 60, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [1]]
		CALL:	curStackLen=6	numArgs=2		[[[4], [[4], 57, [3]], [3]], null, [1]]
		CALL:	curStackLen=8	numArgs=2		[[4], [[4], 57, [3]], [3]]
		FREF:	[4]std.ListLink	curStackLen=10	numArgs=4		["3", "0", "1"]
		CALL:	curStackLen=6	numArgs=2		[[1], [[4], 57, [3]], null]
		FREF:	[1]std.True	curStackLen=8	numArgs=2		"0"
		CALL:	curStackLen=6	numArgs=2		[[4], 57, [3]]
		FREF:	[4]std.ListLink	curStackLen=8	numArgs=4		["3", "0", "1"]
		CALL:	curStackLen=4	numArgs=2		[[[20], [21]], 57, [3]]
		CALL:	curStackLen=6	numArgs=1		[[20], [21]]
		FREF:	[20]std.list.each//lcl:more0//lam:item175	curStackLen=7	numArgs=3		[[4], ["0", "1"], [[19], "0", "2"]]
		CALL:	curStackLen=4	numArgs=2		[[4], [[21], 57], [[19], [21], [3]]]
		FREF:	[4]std.ListLink	curStackLen=6	numArgs=4		["3", "0", "1"]
		CALL:	curStackLen=2	numArgs=2		[[2], null, [[19], [21], [3]]]
		FREF:	[2]std.False	curStackLen=4	numArgs=2		"1"
		CALL:	curStackLen=2	numArgs=2		[[19], [21], [3]]
		FREF:	[19]std.list.each//lcl:more0	curStackLen=4	numArgs=2		["1", [3], [[20], "0"]]
		CALL:	curStackLen=2	numArgs=2		[[3], [3], null]
		FREF:	[3]std.ListEnd	curStackLen=4	numArgs=2		"0"
		FREF:	[3]std.ListEnd	curStackLen=2	numArgs=2		"0"
		INUM:	0
	INUM:	9
	INUM:	-1
FREF:	[1]std.True	curStackLen=2	numArgs=2		"0"
CALL:	curStackLen=0	numArgs=2		[[24], [3], [[26], [[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]]
FREF:	[24]std.list.reversed//lcl:more0	curStackLen=2	numArgs=2		["1", "0", [[25], "0"]]
CALL:	curStackLen=0	numArgs=2		[[[26], [[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]], [3], [[25], [3]]]
CALL:	curStackLen=2	numArgs=1		[[26], [[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]
FREF:	[26]std.num.toString//lcl:tostr0	curStackLen=3	numArgs=1		[[-7], "0", 10, [[4], [[-1], "0", 48], [3]], [[4], [[-1], [[-5], "0", 10], 48], [[26], [[-4], "0", 10]]]]
CALL:	curStackLen=2	numArgs=4		[[-7], [[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], 10, [[4], [[-1], [[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], 48], [3]], [[4], [[-1], [[-5], [[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], 10], 48], [[26], [[-4], [[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], 10]]]]
FREF:	LT	curStackLen=6	numArgs=2		{[[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]] < 10}
	CALL:	curStackLen=0	numArgs=2		[[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]
	FREF:	[13]std.num.parseUnsigned//lcl:more0	curStackLen=2	numArgs=2		[[-1], [[-3], [[14], "0"], [[-8], "1", -1, [[15], 10, "1"], [[-1010101], [[4], 115, [[4], 116, [[4], 100, [[4], 46, [[4], 110, [[4], 117, [[4], 109, [[4], 46, [[4], 112, [[4], 111, [[4], 119, [[4], 32, [[4], 99, [[4], 97, [[4], 108, [[4], 108, [[4], 101, [[4], 100, [[4], 32, [[4], 119, [[4], 105, [[4], 116, [[4], 104, [[4], 32, [[4], 110, [[4], 101, [[4], 103, [[4], 97, [[4], 116, [[4], 105, [[4], 118, [[4], 101, [[4], 32, [[4], 101, [[4], 120, [[4], 112, [[4], 58, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], "1"]]], [[16], "0", 0, [[17], "1", "0"]]]
	CALL:	curStackLen=0	numArgs=2		[[-1], [[-3], [[14], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]], [[-8], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], -1, [[15], 10, [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], [[-1010101], [[4], 115, [[4], 116, [[4], 100, [[4], 46, [[4], 110, [[4], 117, [[4], 109, [[4], 46, [[4], 112, [[4], 111, [[4], 119, [[4], 32, [[4], 99, [[4], 97, [[4], 108, [[4], 108, [[4], 101, [[4], 100, [[4], 32, [[4], 119, [[4], 105, [[4], 116, [[4], 104, [[4], 32, [[4], 110, [[4], 101, [[4], 103, [[4], 97, [[4], 116, [[4], 105, [[4], 118, [[4], 101, [[4], 32, [[4], 101, [[4], 120, [[4], 112, [[4], 58, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]], [[16], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], 0, [[17], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]]]]
	FREF:	ADD	curStackLen=2	numArgs=2		{[[-3], [[14], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]], [[-8], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], -1, [[15], 10, [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], [[-1010101], [[4], 115, [[4], 116, [[4], 100, [[4], 46, [[4], 110, [[4], 117, [[4], 109, [[4], 46, [[4], 112, [[4], 111, [[4], 119, [[4], 32, [[4], 99, [[4], 97, [[4], 108, [[4], 108, [[4], 101, [[4], 100, [[4], 32, [[4], 119, [[4], 105, [[4], 116, [[4], 104, [[4], 32, [[4], 110, [[4], 101, [[4], 103, [[4], 97, [[4], 116, [[4], 105, [[4], 118, [[4], 101, [[4], 32, [[4], 101, [[4], 120, [[4], 112, [[4], 58, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]] + [[16], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], 0, [[17], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]]]}
		CALL:	curStackLen=0	numArgs=2		[[-3], [[14], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]], [[-8], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], -1, [[15], 10, [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], [[-1010101], [[4], 115, [[4], 116, [[4], 100, [[4], 46, [[4], 110, [[4], 117, [[4], 109, [[4], 46, [[4], 112, [[4], 111, [[4], 119, [[4], 32, [[4], 99, [[4], 97, [[4], 108, [[4], 108, [[4], 101, [[4], 100, [[4], 32, [[4], 119, [[4], 105, [[4], 116, [[4], 104, [[4], 32, [[4], 110, [[4], 101, [[4], 103, [[4], 97, [[4], 116, [[4], 105, [[4], 118, [[4], 101, [[4], 32, [[4], 101, [[4], 120, [[4], 112, [[4], 58, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]]
		FREF:	MUL	curStackLen=2	numArgs=2		{[[14], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]] * [[-8], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], -1, [[15], 10, [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], [[-1010101], [[4], 115, [[4], 116, [[4], 100, [[4], 46, [[4], 110, [[4], 117, [[4], 109, [[4], 46, [[4], 112, [[4], 111, [[4], 119, [[4], 32, [[4], 99, [[4], 97, [[4], 108, [[4], 108, [[4], 101, [[4], 100, [[4], 32, [[4], 119, [[4], 105, [[4], 116, [[4], 104, [[4], 32, [[4], 110, [[4], 101, [[4], 103, [[4], 97, [[4], 116, [[4], 105, [[4], 118, [[4], 101, [[4], 32, [[4], 101, [[4], 120, [[4], 112, [[4], 58, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]}
			CALL:	curStackLen=0	numArgs=1		[[14], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]]
			FREF:	[14]std.list.-<	curStackLen=1	numArgs=1		["0", [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 45, [[4], 60, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [1]]
			CALL:	curStackLen=0	numArgs=2		[[[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 45, [[4], 60, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [1]]
			CALL:	curStackLen=2	numArgs=2		[[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]
			FREF:	[19]std.list.each//lcl:more0	curStackLen=4	numArgs=2		["1", [3], [[20], "0"]]
			CALL:	curStackLen=2	numArgs=2		[[[22], [[4], [[4], 57, [3]], [3]], 0], [3], [[20], [21]]]
			CALL:	curStackLen=4	numArgs=2		[[22], [[4], [[4], 57, [3]], [3]], 0]
			FREF:	[22]std.list.at	curStackLen=6	numArgs=2		[[-6], "1", 0, [[14], "0"], [[22], [[16], "0"], [[-1], -1, "1"]]]
			CALL:	curStackLen=4	numArgs=4		[[-6], 0, 0, [[14], [[4], [[4], 57, [3]], [3]]], [[22], [[16], [[4], [[4], 57, [3]], [3]]], [[-1], -1, 0]]]
			FREF:	EQ	curStackLen=8	numArgs=2		{0 = 0}
				INUM:	0
				INUM:	0
			FREF:	[1]std.True	curStackLen=6	numArgs=2		"0"
			CALL:	curStackLen=4	numArgs=1		[[14], [[4], [[4], 57, [3]], [3]]]
			FREF:	[14]std.list.-<	curStackLen=5	numArgs=1		["0", [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 45, [[4], 60, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [1]]
			CALL:	curStackLen=4	numArgs=2		[[[4], [[4], 57, [3]], [3]], null, [1]]
			CALL:	curStackLen=6	numArgs=2		[[4], [[4], 57, [3]], [3]]
			FREF:	[4]std.ListLink	curStackLen=8	numArgs=4		["3", "0", "1"]
			CALL:	curStackLen=4	numArgs=2		[[1], [[4], 57, [3]], null]
			FREF:	[1]std.True	curStackLen=6	numArgs=2		"0"
			CALL:	curStackLen=4	numArgs=2		[[4], 57, [3]]
			FREF:	[4]std.ListLink	curStackLen=6	numArgs=4		["3", "0", "1"]
			CALL:	curStackLen=2	numArgs=2		[[[20], [21]], 57, [3]]
			CALL:	curStackLen=4	numArgs=1		[[20], [21]]
			FREF:	[20]std.list.each//lcl:more0//lam:item175	curStackLen=5	numArgs=3		[[4], ["0", "1"], [[19], "0", "2"]]
			CALL:	curStackLen=2	numArgs=2		[[4], [[21], 57], [[19], [21], [3]]]
			FREF:	[4]std.ListLink	curStackLen=4	numArgs=4		["3", "0", "1"]
			CALL:	curStackLen=0	numArgs=2		[[1], [[21], 57], null]
			FREF:	[1]std.True	curStackLen=2	numArgs=2		"0"
			CALL:	curStackLen=0	numArgs=1		[[21], 57]
			FREF:	[21]std.num.parseUnsigned//lcl:chartodigit1	curStackLen=1	numArgs=1		[[-8], "0", 47, [[-7], "0", 58], [2], [[-2], "0", 48], [[-2], 0, "0"]]
			CALL:	curStackLen=0	numArgs=6		[[-8], 57, 47, [[-7], 57, 58], [2], [[-2], 57, 48], [[-2], 0, 57]]
			FREF:	GT	curStackLen=6	numArgs=2		{57 > 47}
				INUM:	57
				INUM:	47
			FREF:	[1]std.True	curStackLen=4	numArgs=2		"0"
			CALL:	curStackLen=2	numArgs=2		[[-7], 57, 58]
			FREF:	LT	curStackLen=4	numArgs=2		{57 < 58}
				INUM:	57
				INUM:	58
			FREF:	[1]std.True	curStackLen=2	numArgs=2		"0"
			CALL:	curStackLen=0	numArgs=2		[[-2], 57, 48]
			FREF:	SUB	curStackLen=2	numArgs=2		{57 - 48}
				INUM:	57
				INUM:	48
			INUM:	9
			CALL:	curStackLen=0	numArgs=4		[[-8], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], -1, [[15], 10, [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], [[-1010101], [[4], 115, [[4], 116, [[4], 100, [[4], 46, [[4], 110, [[4], 117, [[4], 109, [[4], 46, [[4], 112, [[4], 111, [[4], 119, [[4], 32, [[4], 99, [[4], 97, [[4], 108, [[4], 108, [[4], 101, [[4], 100, [[4], 32, [[4], 119, [[4], 105, [[4], 116, [[4], 104, [[4], 32, [[4], 110, [[4], 101, [[4], 103, [[4], 97, [[4], 116, [[4], 105, [[4], 118, [[4], 101, [[4], 32, [[4], 101, [[4], 120, [[4], 112, [[4], 58, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]
			FREF:	GT	curStackLen=4	numArgs=2		{[[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]] > -1}
				CALL:	curStackLen=0	numArgs=2		[[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]
				FREF:	ADD	curStackLen=2	numArgs=2		{-1 + [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]}
					INUM:	-1
					CALL:	curStackLen=0	numArgs=2		[[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]
					CALL:	curStackLen=2	numArgs=2		[[22], [[4], [[4], 57, [3]], [3]], 0]
					FREF:	[22]std.list.at	curStackLen=4	numArgs=2		[[-6], "1", 0, [[14], "0"], [[22], [[16], "0"], [[-1], -1, "1"]]]
					CALL:	curStackLen=2	numArgs=4		[[-6], 0, 0, [[14], [[4], [[4], 57, [3]], [3]]], [[22], [[16], [[4], [[4], 57, [3]], [3]]], [[-1], -1, 0]]]
					FREF:	EQ	curStackLen=6	numArgs=2		{0 = 0}
						INUM:	0
						INUM:	0
					FREF:	[1]std.True	curStackLen=4	numArgs=2		"0"
					CALL:	curStackLen=2	numArgs=1		[[14], [[4], [[4], 57, [3]], [3]]]
					FREF:	[14]std.list.-<	curStackLen=3	numArgs=1		["0", [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 45, [[4], 60, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [1]]
					CALL:	curStackLen=2	numArgs=2		[[[4], [[4], 57, [3]], [3]], null, [1]]
					CALL:	curStackLen=4	numArgs=2		[[4], [[4], 57, [3]], [3]]
					FREF:	[4]std.ListLink	curStackLen=6	numArgs=4		["3", "0", "1"]
					CALL:	curStackLen=2	numArgs=2		[[1], [[4], 57, [3]], null]
					FREF:	[1]std.True	curStackLen=4	numArgs=2		"0"
					CALL:	curStackLen=2	numArgs=2		[[4], 57, [3]]
					FREF:	[4]std.ListLink	curStackLen=4	numArgs=4		["3", "0", "1"]
					CALL:	curStackLen=0	numArgs=2		[[18], null, [3]]
					FREF:	[18]std.list.len//lam://0//1262173	curStackLen=2	numArgs=2		[[-1], 1, ["1", 0, [18]]]
					CALL:	curStackLen=0	numArgs=2		[[-1], 1, [[3], 0, null]]
					FREF:	ADD	curStackLen=2	numArgs=2		{1 + [[3], 0, null]}
						INUM:	1
						CALL:	curStackLen=0	numArgs=2		[[3], 0, null]
						FREF:	[3]std.ListEnd	curStackLen=2	numArgs=2		"0"
						INUM:	0
					INUM:	1
				INUM:	0
				INUM:	-1
			FREF:	[1]std.True	curStackLen=2	numArgs=2		"0"
			CALL:	curStackLen=0	numArgs=2		[[15], 10, [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]
			FREF:	[15]std.num.pow//lcl:mults0	curStackLen=2	numArgs=2		[[-6], "1", 0, 1, [[-3], "0", [[15], "0", [[-1], -1, "1"]]]]
			CALL:	curStackLen=0	numArgs=4		[[-6], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], 0, 1, [[-3], 10, [[15], 10, [[-1], -1, [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]]]
			FREF:	EQ	curStackLen=4	numArgs=2		{[[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]] = 0}
				CALL:	curStackLen=0	numArgs=2		[[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]
				FREF:	ADD	curStackLen=2	numArgs=2		{-1 + [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]}
					INUM:	-1
					CALL:	curStackLen=0	numArgs=2		[[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]
					CALL:	curStackLen=2	numArgs=2		[[22], [[4], [[4], 57, [3]], [3]], 0]
					FREF:	[22]std.list.at	curStackLen=4	numArgs=2		[[-6], "1", 0, [[14], "0"], [[22], [[16], "0"], [[-1], -1, "1"]]]
					CALL:	curStackLen=2	numArgs=4		[[-6], 0, 0, [[14], [[4], [[4], 57, [3]], [3]]], [[22], [[16], [[4], [[4], 57, [3]], [3]]], [[-1], -1, 0]]]
					FREF:	EQ	curStackLen=6	numArgs=2		{0 = 0}
						INUM:	0
						INUM:	0
					FREF:	[1]std.True	curStackLen=4	numArgs=2		"0"
					CALL:	curStackLen=2	numArgs=1		[[14], [[4], [[4], 57, [3]], [3]]]
					FREF:	[14]std.list.-<	curStackLen=3	numArgs=1		["0", [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 45, [[4], 60, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [1]]
					CALL:	curStackLen=2	numArgs=2		[[[4], [[4], 57, [3]], [3]], null, [1]]
					CALL:	curStackLen=4	numArgs=2		[[4], [[4], 57, [3]], [3]]
					FREF:	[4]std.ListLink	curStackLen=6	numArgs=4		["3", "0", "1"]
					CALL:	curStackLen=2	numArgs=2		[[1], [[4], 57, [3]], null]
					FREF:	[1]std.True	curStackLen=4	numArgs=2		"0"
					CALL:	curStackLen=2	numArgs=2		[[4], 57, [3]]
					FREF:	[4]std.ListLink	curStackLen=4	numArgs=4		["3", "0", "1"]
					CALL:	curStackLen=0	numArgs=2		[[18], null, [3]]
					FREF:	[18]std.list.len//lam://0//1262173	curStackLen=2	numArgs=2		[[-1], 1, ["1", 0, [18]]]
					CALL:	curStackLen=0	numArgs=2		[[-1], 1, [[3], 0, null]]
					FREF:	ADD	curStackLen=2	numArgs=2		{1 + [[3], 0, null]}
						INUM:	1
						CALL:	curStackLen=0	numArgs=2		[[3], 0, null]
						FREF:	[3]std.ListEnd	curStackLen=2	numArgs=2		"0"
						INUM:	0
					INUM:	1
				INUM:	0
				INUM:	0
			FREF:	[1]std.True	curStackLen=2	numArgs=2		"0"
			INUM:	1
		INUM:	9
		CALL:	curStackLen=0	numArgs=3		[[16], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], 0, [[17], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]]]
		FREF:	[16]std.list.>-	curStackLen=3	numArgs=1		["0", [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 62, [[4], 45, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [2]]
		CALL:	curStackLen=2	numArgs=2		[[[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 62, [[4], 45, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [2]]
		CALL:	curStackLen=4	numArgs=2		[[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]
		FREF:	[19]std.list.each//lcl:more0	curStackLen=6	numArgs=2		["1", [3], [[20], "0"]]
		CALL:	curStackLen=4	numArgs=2		[[[22], [[4], [[4], 57, [3]], [3]], 0], [3], [[20], [21]]]
		CALL:	curStackLen=6	numArgs=2		[[22], [[4], [[4], 57, [3]], [3]], 0]
		FREF:	[22]std.list.at	curStackLen=8	numArgs=2		[[-6], "1", 0, [[14], "0"], [[22], [[16], "0"], [[-1], -1, "1"]]]
		CALL:	curStackLen=6	numArgs=4		[[-6], 0, 0, [[14], [[4], [[4], 57, [3]], [3]]], [[22], [[16], [[4], [[4], 57, [3]], [3]]], [[-1], -1, 0]]]
		FREF:	EQ	curStackLen=10	numArgs=2		{0 = 0}
			INUM:	0
			INUM:	0
		FREF:	[1]std.True	curStackLen=8	numArgs=2		"0"
		CALL:	curStackLen=6	numArgs=1		[[14], [[4], [[4], 57, [3]], [3]]]
		FREF:	[14]std.list.-<	curStackLen=7	numArgs=1		["0", [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 45, [[4], 60, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [1]]
		CALL:	curStackLen=6	numArgs=2		[[[4], [[4], 57, [3]], [3]], null, [1]]
		CALL:	curStackLen=8	numArgs=2		[[4], [[4], 57, [3]], [3]]
		FREF:	[4]std.ListLink	curStackLen=10	numArgs=4		["3", "0", "1"]
		CALL:	curStackLen=6	numArgs=2		[[1], [[4], 57, [3]], null]
		FREF:	[1]std.True	curStackLen=8	numArgs=2		"0"
		CALL:	curStackLen=6	numArgs=2		[[4], 57, [3]]
		FREF:	[4]std.ListLink	curStackLen=8	numArgs=4		["3", "0", "1"]
		CALL:	curStackLen=4	numArgs=2		[[[20], [21]], 57, [3]]
		CALL:	curStackLen=6	numArgs=1		[[20], [21]]
		FREF:	[20]std.list.each//lcl:more0//lam:item175	curStackLen=7	numArgs=3		[[4], ["0", "1"], [[19], "0", "2"]]
		CALL:	curStackLen=4	numArgs=2		[[4], [[21], 57], [[19], [21], [3]]]
		FREF:	[4]std.ListLink	curStackLen=6	numArgs=4		["3", "0", "1"]
		CALL:	curStackLen=2	numArgs=2		[[2], null, [[19], [21], [3]]]
		FREF:	[2]std.False	curStackLen=4	numArgs=2		"1"
		CALL:	curStackLen=2	numArgs=2		[[19], [21], [3]]
		FREF:	[19]std.list.each//lcl:more0	curStackLen=4	numArgs=2		["1", [3], [[20], "0"]]
		CALL:	curStackLen=2	numArgs=2		[[3], [3], null]
		FREF:	[3]std.ListEnd	curStackLen=4	numArgs=2		"0"
		FREF:	[3]std.ListEnd	curStackLen=2	numArgs=2		"0"
		INUM:	0
	INUM:	9
	INUM:	10
FREF:	[1]std.True	curStackLen=4	numArgs=2		"0"
CALL:	curStackLen=2	numArgs=2		[[4], [[-1], [[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], 48], [3]]
FREF:	[4]std.ListLink	curStackLen=4	numArgs=4		["3", "0", "1"]
CALL:	curStackLen=0	numArgs=2		[[[25], [3]], [[-1], [[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], 48], [3]]
CALL:	curStackLen=2	numArgs=1		[[25], [3]]
FREF:	[25]std.list.reversed//lcl:more0//lam:item179	curStackLen=3	numArgs=2		[[24], [[4], "1", "0"]]
CALL:	curStackLen=1	numArgs=1		[[24], [[4], [[-1], [[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], 48], [3]]]
FREF:	[24]std.list.reversed//lcl:more0	curStackLen=2	numArgs=2		["1", "0", [[25], "0"]]
CALL:	curStackLen=0	numArgs=2		[[3], [[4], [[-1], [[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], 48], [3]], null]
FREF:	[3]std.ListEnd	curStackLen=2	numArgs=2		"0"
CALL:	curStackLen=0	numArgs=2		[[4], [[-1], [[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], 48], [3]]
FREF:	[4]std.ListLink	curStackLen=2	numArgs=4		["3", "0", "1"]
	CALL:	curStackLen=0	numArgs=2		[[-1], [[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], 48]
	FREF:	ADD	curStackLen=2	numArgs=2		{[[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]] + 48}
		CALL:	curStackLen=0	numArgs=2		[[13], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]
		FREF:	[13]std.num.parseUnsigned//lcl:more0	curStackLen=2	numArgs=2		[[-1], [[-3], [[14], "0"], [[-8], "1", -1, [[15], 10, "1"], [[-1010101], [[4], 115, [[4], 116, [[4], 100, [[4], 46, [[4], 110, [[4], 117, [[4], 109, [[4], 46, [[4], 112, [[4], 111, [[4], 119, [[4], 32, [[4], 99, [[4], 97, [[4], 108, [[4], 108, [[4], 101, [[4], 100, [[4], 32, [[4], 119, [[4], 105, [[4], 116, [[4], 104, [[4], 32, [[4], 110, [[4], 101, [[4], 103, [[4], 97, [[4], 116, [[4], 105, [[4], 118, [[4], 101, [[4], 32, [[4], 101, [[4], 120, [[4], 112, [[4], 58, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], "1"]]], [[16], "0", 0, [[17], "1", "0"]]]
		CALL:	curStackLen=0	numArgs=2		[[-1], [[-3], [[14], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]], [[-8], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], -1, [[15], 10, [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], [[-1010101], [[4], 115, [[4], 116, [[4], 100, [[4], 46, [[4], 110, [[4], 117, [[4], 109, [[4], 46, [[4], 112, [[4], 111, [[4], 119, [[4], 32, [[4], 99, [[4], 97, [[4], 108, [[4], 108, [[4], 101, [[4], 100, [[4], 32, [[4], 119, [[4], 105, [[4], 116, [[4], 104, [[4], 32, [[4], 110, [[4], 101, [[4], 103, [[4], 97, [[4], 116, [[4], 105, [[4], 118, [[4], 101, [[4], 32, [[4], 101, [[4], 120, [[4], 112, [[4], 58, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]], [[16], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], 0, [[17], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]]]]
		FREF:	ADD	curStackLen=2	numArgs=2		{[[-3], [[14], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]], [[-8], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], -1, [[15], 10, [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], [[-1010101], [[4], 115, [[4], 116, [[4], 100, [[4], 46, [[4], 110, [[4], 117, [[4], 109, [[4], 46, [[4], 112, [[4], 111, [[4], 119, [[4], 32, [[4], 99, [[4], 97, [[4], 108, [[4], 108, [[4], 101, [[4], 100, [[4], 32, [[4], 119, [[4], 105, [[4], 116, [[4], 104, [[4], 32, [[4], 110, [[4], 101, [[4], 103, [[4], 97, [[4], 116, [[4], 105, [[4], 118, [[4], 101, [[4], 32, [[4], 101, [[4], 120, [[4], 112, [[4], 58, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]] + [[16], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], 0, [[17], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]]]}
			CALL:	curStackLen=0	numArgs=2		[[-3], [[14], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]], [[-8], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], -1, [[15], 10, [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], [[-1010101], [[4], 115, [[4], 116, [[4], 100, [[4], 46, [[4], 110, [[4], 117, [[4], 109, [[4], 46, [[4], 112, [[4], 111, [[4], 119, [[4], 32, [[4], 99, [[4], 97, [[4], 108, [[4], 108, [[4], 101, [[4], 100, [[4], 32, [[4], 119, [[4], 105, [[4], 116, [[4], 104, [[4], 32, [[4], 110, [[4], 101, [[4], 103, [[4], 97, [[4], 116, [[4], 105, [[4], 118, [[4], 101, [[4], 32, [[4], 101, [[4], 120, [[4], 112, [[4], 58, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]]
			FREF:	MUL	curStackLen=2	numArgs=2		{[[14], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]] * [[-8], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], -1, [[15], 10, [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], [[-1010101], [[4], 115, [[4], 116, [[4], 100, [[4], 46, [[4], 110, [[4], 117, [[4], 109, [[4], 46, [[4], 112, [[4], 111, [[4], 119, [[4], 32, [[4], 99, [[4], 97, [[4], 108, [[4], 108, [[4], 101, [[4], 100, [[4], 32, [[4], 119, [[4], 105, [[4], 116, [[4], 104, [[4], 32, [[4], 110, [[4], 101, [[4], 103, [[4], 97, [[4], 116, [[4], 105, [[4], 118, [[4], 101, [[4], 32, [[4], 101, [[4], 120, [[4], 112, [[4], 58, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]}
				CALL:	curStackLen=0	numArgs=1		[[14], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]]
				FREF:	[14]std.list.-<	curStackLen=1	numArgs=1		["0", [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 45, [[4], 60, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [1]]
				CALL:	curStackLen=0	numArgs=2		[[[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 45, [[4], 60, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [1]]
				CALL:	curStackLen=2	numArgs=2		[[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]
				FREF:	[19]std.list.each//lcl:more0	curStackLen=4	numArgs=2		["1", [3], [[20], "0"]]
				CALL:	curStackLen=2	numArgs=2		[[[22], [[4], [[4], 57, [3]], [3]], 0], [3], [[20], [21]]]
				CALL:	curStackLen=4	numArgs=2		[[22], [[4], [[4], 57, [3]], [3]], 0]
				FREF:	[22]std.list.at	curStackLen=6	numArgs=2		[[-6], "1", 0, [[14], "0"], [[22], [[16], "0"], [[-1], -1, "1"]]]
				CALL:	curStackLen=4	numArgs=4		[[-6], 0, 0, [[14], [[4], [[4], 57, [3]], [3]]], [[22], [[16], [[4], [[4], 57, [3]], [3]]], [[-1], -1, 0]]]
				FREF:	EQ	curStackLen=8	numArgs=2		{0 = 0}
					INUM:	0
					INUM:	0
				FREF:	[1]std.True	curStackLen=6	numArgs=2		"0"
				CALL:	curStackLen=4	numArgs=1		[[14], [[4], [[4], 57, [3]], [3]]]
				FREF:	[14]std.list.-<	curStackLen=5	numArgs=1		["0", [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 45, [[4], 60, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [1]]
				CALL:	curStackLen=4	numArgs=2		[[[4], [[4], 57, [3]], [3]], null, [1]]
				CALL:	curStackLen=6	numArgs=2		[[4], [[4], 57, [3]], [3]]
				FREF:	[4]std.ListLink	curStackLen=8	numArgs=4		["3", "0", "1"]
				CALL:	curStackLen=4	numArgs=2		[[1], [[4], 57, [3]], null]
				FREF:	[1]std.True	curStackLen=6	numArgs=2		"0"
				CALL:	curStackLen=4	numArgs=2		[[4], 57, [3]]
				FREF:	[4]std.ListLink	curStackLen=6	numArgs=4		["3", "0", "1"]
				CALL:	curStackLen=2	numArgs=2		[[[20], [21]], 57, [3]]
				CALL:	curStackLen=4	numArgs=1		[[20], [21]]
				FREF:	[20]std.list.each//lcl:more0//lam:item175	curStackLen=5	numArgs=3		[[4], ["0", "1"], [[19], "0", "2"]]
				CALL:	curStackLen=2	numArgs=2		[[4], [[21], 57], [[19], [21], [3]]]
				FREF:	[4]std.ListLink	curStackLen=4	numArgs=4		["3", "0", "1"]
				CALL:	curStackLen=0	numArgs=2		[[1], [[21], 57], null]
				FREF:	[1]std.True	curStackLen=2	numArgs=2		"0"
				CALL:	curStackLen=0	numArgs=1		[[21], 57]
				FREF:	[21]std.num.parseUnsigned//lcl:chartodigit1	curStackLen=1	numArgs=1		[[-8], "0", 47, [[-7], "0", 58], [2], [[-2], "0", 48], [[-2], 0, "0"]]
				CALL:	curStackLen=0	numArgs=6		[[-8], 57, 47, [[-7], 57, 58], [2], [[-2], 57, 48], [[-2], 0, 57]]
				FREF:	GT	curStackLen=6	numArgs=2		{57 > 47}
					INUM:	57
					INUM:	47
				FREF:	[1]std.True	curStackLen=4	numArgs=2		"0"
				CALL:	curStackLen=2	numArgs=2		[[-7], 57, 58]
				FREF:	LT	curStackLen=4	numArgs=2		{57 < 58}
					INUM:	57
					INUM:	58
				FREF:	[1]std.True	curStackLen=2	numArgs=2		"0"
				CALL:	curStackLen=0	numArgs=2		[[-2], 57, 48]
				FREF:	SUB	curStackLen=2	numArgs=2		{57 - 48}
					INUM:	57
					INUM:	48
				INUM:	9
				CALL:	curStackLen=0	numArgs=4		[[-8], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], -1, [[15], 10, [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]], [[-1010101], [[4], 115, [[4], 116, [[4], 100, [[4], 46, [[4], 110, [[4], 117, [[4], 109, [[4], 46, [[4], 112, [[4], 111, [[4], 119, [[4], 32, [[4], 99, [[4], 97, [[4], 108, [[4], 108, [[4], 101, [[4], 100, [[4], 32, [[4], 119, [[4], 105, [[4], 116, [[4], 104, [[4], 32, [[4], 110, [[4], 101, [[4], 103, [[4], 97, [[4], 116, [[4], 105, [[4], 118, [[4], 101, [[4], 32, [[4], 101, [[4], 120, [[4], 112, [[4], 58, [3]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]
				FREF:	GT	curStackLen=4	numArgs=2		{[[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]] > -1}
					CALL:	curStackLen=0	numArgs=2		[[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]
					FREF:	ADD	curStackLen=2	numArgs=2		{-1 + [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]}
						INUM:	-1
						CALL:	curStackLen=0	numArgs=2		[[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]
						CALL:	curStackLen=2	numArgs=2		[[22], [[4], [[4], 57, [3]], [3]], 0]
						FREF:	[22]std.list.at	curStackLen=4	numArgs=2		[[-6], "1", 0, [[14], "0"], [[22], [[16], "0"], [[-1], -1, "1"]]]
						CALL:	curStackLen=2	numArgs=4		[[-6], 0, 0, [[14], [[4], [[4], 57, [3]], [3]]], [[22], [[16], [[4], [[4], 57, [3]], [3]]], [[-1], -1, 0]]]
						FREF:	EQ	curStackLen=6	numArgs=2		{0 = 0}
							INUM:	0
							INUM:	0
						FREF:	[1]std.True	curStackLen=4	numArgs=2		"0"
						CALL:	curStackLen=2	numArgs=1		[[14], [[4], [[4], 57, [3]], [3]]]
						FREF:	[14]std.list.-<	curStackLen=3	numArgs=1		["0", [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 45, [[4], 60, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [1]]
						CALL:	curStackLen=2	numArgs=2		[[[4], [[4], 57, [3]], [3]], null, [1]]
						CALL:	curStackLen=4	numArgs=2		[[4], [[4], 57, [3]], [3]]
						FREF:	[4]std.ListLink	curStackLen=6	numArgs=4		["3", "0", "1"]
						CALL:	curStackLen=2	numArgs=2		[[1], [[4], 57, [3]], null]
						FREF:	[1]std.True	curStackLen=4	numArgs=2		"0"
						CALL:	curStackLen=2	numArgs=2		[[4], 57, [3]]
						FREF:	[4]std.ListLink	curStackLen=4	numArgs=4		["3", "0", "1"]
						CALL:	curStackLen=0	numArgs=2		[[18], null, [3]]
						FREF:	[18]std.list.len//lam://0//1262173	curStackLen=2	numArgs=2		[[-1], 1, ["1", 0, [18]]]
						CALL:	curStackLen=0	numArgs=2		[[-1], 1, [[3], 0, null]]
						FREF:	ADD	curStackLen=2	numArgs=2		{1 + [[3], 0, null]}
							INUM:	1
							CALL:	curStackLen=0	numArgs=2		[[3], 0, null]
							FREF:	[3]std.ListEnd	curStackLen=2	numArgs=2		"0"
							INUM:	0
						INUM:	1
					INUM:	0
					INUM:	-1
				FREF:	[1]std.True	curStackLen=2	numArgs=2		"0"
				CALL:	curStackLen=0	numArgs=2		[[15], 10, [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]
				FREF:	[15]std.num.pow//lcl:mults0	curStackLen=2	numArgs=2		[[-6], "1", 0, 1, [[-3], "0", [[15], "0", [[-1], -1, "1"]]]]
				CALL:	curStackLen=0	numArgs=4		[[-6], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], 0, 1, [[-3], 10, [[15], 10, [[-1], -1, [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]]]]]
				FREF:	EQ	curStackLen=4	numArgs=2		{[[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]] = 0}
					CALL:	curStackLen=0	numArgs=2		[[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]]
					FREF:	ADD	curStackLen=2	numArgs=2		{-1 + [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]}
						INUM:	-1
						CALL:	curStackLen=0	numArgs=2		[[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]
						CALL:	curStackLen=2	numArgs=2		[[22], [[4], [[4], 57, [3]], [3]], 0]
						FREF:	[22]std.list.at	curStackLen=4	numArgs=2		[[-6], "1", 0, [[14], "0"], [[22], [[16], "0"], [[-1], -1, "1"]]]
						CALL:	curStackLen=2	numArgs=4		[[-6], 0, 0, [[14], [[4], [[4], 57, [3]], [3]]], [[22], [[16], [[4], [[4], 57, [3]], [3]]], [[-1], -1, 0]]]
						FREF:	EQ	curStackLen=6	numArgs=2		{0 = 0}
							INUM:	0
							INUM:	0
						FREF:	[1]std.True	curStackLen=4	numArgs=2		"0"
						CALL:	curStackLen=2	numArgs=1		[[14], [[4], [[4], 57, [3]], [3]]]
						FREF:	[14]std.list.-<	curStackLen=3	numArgs=1		["0", [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 45, [[4], 60, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [1]]
						CALL:	curStackLen=2	numArgs=2		[[[4], [[4], 57, [3]], [3]], null, [1]]
						CALL:	curStackLen=4	numArgs=2		[[4], [[4], 57, [3]], [3]]
						FREF:	[4]std.ListLink	curStackLen=6	numArgs=4		["3", "0", "1"]
						CALL:	curStackLen=2	numArgs=2		[[1], [[4], 57, [3]], null]
						FREF:	[1]std.True	curStackLen=4	numArgs=2		"0"
						CALL:	curStackLen=2	numArgs=2		[[4], 57, [3]]
						FREF:	[4]std.ListLink	curStackLen=4	numArgs=4		["3", "0", "1"]
						CALL:	curStackLen=0	numArgs=2		[[18], null, [3]]
						FREF:	[18]std.list.len//lam://0//1262173	curStackLen=2	numArgs=2		[[-1], 1, ["1", 0, [18]]]
						CALL:	curStackLen=0	numArgs=2		[[-1], 1, [[3], 0, null]]
						FREF:	ADD	curStackLen=2	numArgs=2		{1 + [[3], 0, null]}
							INUM:	1
							CALL:	curStackLen=0	numArgs=2		[[3], 0, null]
							FREF:	[3]std.ListEnd	curStackLen=2	numArgs=2		"0"
							INUM:	0
						INUM:	1
					INUM:	0
					INUM:	0
				FREF:	[1]std.True	curStackLen=2	numArgs=2		"0"
				INUM:	1
			INUM:	9
			CALL:	curStackLen=0	numArgs=3		[[16], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], 0, [[17], [[-1], -1, [[[22], [[4], [[4], 57, [3]], [3]], 0], 0, [18]]], [[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]]]
			FREF:	[16]std.list.>-	curStackLen=3	numArgs=1		["0", [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 62, [[4], 45, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [2]]
			CALL:	curStackLen=2	numArgs=2		[[[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]], [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 62, [[4], 45, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [2]]
			CALL:	curStackLen=4	numArgs=2		[[19], [21], [[22], [[4], [[4], 57, [3]], [3]], 0]]
			FREF:	[19]std.list.each//lcl:more0	curStackLen=6	numArgs=2		["1", [3], [[20], "0"]]
			CALL:	curStackLen=4	numArgs=2		[[[22], [[4], [[4], 57, [3]], [3]], 0], [3], [[20], [21]]]
			CALL:	curStackLen=6	numArgs=2		[[22], [[4], [[4], 57, [3]], [3]], 0]
			FREF:	[22]std.list.at	curStackLen=8	numArgs=2		[[-6], "1", 0, [[14], "0"], [[22], [[16], "0"], [[-1], -1, "1"]]]
			CALL:	curStackLen=6	numArgs=4		[[-6], 0, 0, [[14], [[4], [[4], 57, [3]], [3]]], [[22], [[16], [[4], [[4], 57, [3]], [3]]], [[-1], -1, 0]]]
			FREF:	EQ	curStackLen=10	numArgs=2		{0 = 0}
				INUM:	0
				INUM:	0
			FREF:	[1]std.True	curStackLen=8	numArgs=2		"0"
			CALL:	curStackLen=6	numArgs=1		[[14], [[4], [[4], 57, [3]], [3]]]
			FREF:	[14]std.list.-<	curStackLen=7	numArgs=1		["0", [[-1010101], [[4], 102, [[4], 111, [[4], 114, [[4], 103, [[4], 111, [[4], 116, [[4], 32, [[4], 110, [[4], 105, [[4], 108, [[4], 32, [[4], 99, [[4], 104, [[4], 101, [[4], 99, [[4], 107, [[4], 32, [[4], 98, [[4], 101, [[4], 102, [[4], 111, [[4], 114, [[4], 101, [[4], 32, [[4], 45, [[4], 60, [3]]]]]]]]]]]]]]]]]]]]]]]]]]], [0]], [1]]
			CALL:	curStackLen=6	numArgs=2		[[[4], [[4], 57, [3]], [3]], null, [1]]
			CALL:	curStackLen=8	numArgs=2		[[4], [[4], 57, [3]], [3]]
			FREF:	[4]std.ListLink	curStackLen=10	numArgs=4		["3", "0", "1"]
			CALL:	curStackLen=6	numArgs=2		[[1], [[4], 57, [3]], null]
			FREF:	[1]std.True	curStackLen=8	numArgs=2		"0"
			CALL:	curStackLen=6	numArgs=2		[[4], 57, [3]]
			FREF:	[4]std.ListLink	curStackLen=8	numArgs=4		["3", "0", "1"]
			CALL:	curStackLen=4	numArgs=2		[[[20], [21]], 57, [3]]
			CALL:	curStackLen=6	numArgs=1		[[20], [21]]
			FREF:	[20]std.list.each//lcl:more0//lam:item175	curStackLen=7	numArgs=3		[[4], ["0", "1"], [[19], "0", "2"]]
			CALL:	curStackLen=4	numArgs=2		[[4], [[21], 57], [[19], [21], [3]]]
			FREF:	[4]std.ListLink	curStackLen=6	numArgs=4		["3", "0", "1"]
			CALL:	curStackLen=2	numArgs=2		[[2], null, [[19], [21], [3]]]
			FREF:	[2]std.False	curStackLen=4	numArgs=2		"1"
			CALL:	curStackLen=2	numArgs=2		[[19], [21], [3]]
			FREF:	[19]std.list.each//lcl:more0	curStackLen=4	numArgs=2		["1", [3], [[20], "0"]]
			CALL:	curStackLen=2	numArgs=2		[[3], [3], null]
			FREF:	[3]std.ListEnd	curStackLen=4	numArgs=2		"0"
			FREF:	[3]std.ListEnd	curStackLen=2	numArgs=2		"0"
			INUM:	0
		INUM:	9
		INUM:	48
	INUM:	57
	FREF:	[3]std.ListEnd	curStackLen=0	numArgs=2		"0"
